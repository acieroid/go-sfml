//generated by mangler.py
%rename(ListenerSetGlobalVolume) sfListener_SetGlobalVolume;
void sfListener_SetGlobalVolume(float Volume);

%rename(ListenerGetGlobalVolume) sfListener_GetGlobalVolume;
float sfListener_GetGlobalVolume();

%rename(ListenerSetPosition) sfListener_SetPosition;
void sfListener_SetPosition(float PosX, float PosY, float PosZ);

%rename(ListenerGetPosition) sfListener_GetPosition;
void sfListener_GetPosition(float* PosX, float* PosY, float* PosZ);

%rename(ListenerSetTarget) sfListener_SetTarget;
void sfListener_SetTarget(float TargetX, float TargetY, float TargetZ);

%rename(ListenerGetTarget) sfListener_GetTarget;
void sfListener_GetTarget(float* TargetX, float* TargetY, float* TargetZ);

%rename(MusicCreateFromFile) sfMusic_CreateFromFile;
sfMusic* sfMusic_CreateFromFile(const char* Filename);

%rename(MusicCreateFromMemory) sfMusic_CreateFromMemory;
sfMusic* sfMusic_CreateFromMemory(const char* Data, size_t SizeInBytes);

%rename(MusicDestroy) sfMusic_Destroy;
void sfMusic_Destroy(sfMusic* Music);

%rename(MusicSetLoop) sfMusic_SetLoop;
void sfMusic_SetLoop(sfMusic* Music, sfBool Loop);

%rename(MusicGetLoop) sfMusic_GetLoop;
sfBool sfMusic_GetLoop(sfMusic* Music);

%rename(MusicGetDuration) sfMusic_GetDuration;
float sfMusic_GetDuration(sfMusic* Music);

%rename(MusicPlay) sfMusic_Play;
void sfMusic_Play(sfMusic* Music);

%rename(MusicPause) sfMusic_Pause;
void sfMusic_Pause(sfMusic* Music);

%rename(MusicStop) sfMusic_Stop;
void sfMusic_Stop(sfMusic* Music);

%rename(MusicGetChannelsCount) sfMusic_GetChannelsCount;
unsigned int sfMusic_GetChannelsCount(sfMusic* Music);

%rename(MusicGetSampleRate) sfMusic_GetSampleRate;
unsigned int sfMusic_GetSampleRate(sfMusic* Music);

%rename(MusicGetStatus) sfMusic_GetStatus;
sfSoundStatus sfMusic_GetStatus(sfMusic* Music);

%rename(MusicGetPlayingOffset) sfMusic_GetPlayingOffset;
float sfMusic_GetPlayingOffset(sfMusic* Music);

%rename(MusicSetPitch) sfMusic_SetPitch;
void sfMusic_SetPitch(sfMusic* Music, float Pitch);

%rename(MusicSetVolume) sfMusic_SetVolume;
void sfMusic_SetVolume(sfMusic* Music, float Volume);

%rename(MusicSetPosition) sfMusic_SetPosition;
void sfMusic_SetPosition(sfMusic* Music, float X, float Y, float Z);

%rename(MusicSetRelativeToListener) sfMusic_SetRelativeToListener;
void sfMusic_SetRelativeToListener(sfMusic* Music, sfBool Relative);

%rename(MusicSetMinDistance) sfMusic_SetMinDistance;
void sfMusic_SetMinDistance(sfMusic* Music, float MinDistance);

%rename(MusicSetAttenuation) sfMusic_SetAttenuation;
void sfMusic_SetAttenuation(sfMusic* Music, float Attenuation);

%rename(MusicGetPitch) sfMusic_GetPitch;
float sfMusic_GetPitch(sfMusic* Music);

%rename(MusicGetVolume) sfMusic_GetVolume;
float sfMusic_GetVolume(sfMusic* Music);

%rename(MusicGetPosition) sfMusic_GetPosition;
void sfMusic_GetPosition(sfMusic* Music, float* X, float* Y, float* Z);

%rename(MusicIsRelativeToListener) sfMusic_IsRelativeToListener;
sfBool sfMusic_IsRelativeToListener(sfMusic* Music);

%rename(MusicGetMinDistance) sfMusic_GetMinDistance;
float sfMusic_GetMinDistance(sfMusic* Music);

%rename(MusicGetAttenuation) sfMusic_GetAttenuation;
float sfMusic_GetAttenuation(sfMusic* Music);

%rename(SoundBufferCreateFromFile) sfSoundBuffer_CreateFromFile;
sfSoundBuffer* sfSoundBuffer_CreateFromFile(const char* Filename);

%rename(SoundBufferCreateFromMemory) sfSoundBuffer_CreateFromMemory;
sfSoundBuffer* sfSoundBuffer_CreateFromMemory(const char* Data, size_t SizeInBytes);

%rename(SoundBufferCreateFromSamples) sfSoundBuffer_CreateFromSamples;
sfSoundBuffer* sfSoundBuffer_CreateFromSamples(const sfInt16* Samples, size_t SamplesCount, unsigned int ChannelsCount, unsigned int SampleRate);

%rename(SoundBufferDestroy) sfSoundBuffer_Destroy;
void sfSoundBuffer_Destroy(sfSoundBuffer* SoundBuffer);

%rename(SoundBufferSaveToFile) sfSoundBuffer_SaveToFile;
sfBool sfSoundBuffer_SaveToFile(sfSoundBuffer* SoundBuffer, const char* Filename);

%rename(SoundBufferGetSamples) sfSoundBuffer_GetSamples;
const sfInt16* sfSoundBuffer_GetSamples(sfSoundBuffer* SoundBuffer);

%rename(SoundBufferGetSamplesCount) sfSoundBuffer_GetSamplesCount;
size_t sfSoundBuffer_GetSamplesCount(sfSoundBuffer* SoundBuffer);

%rename(SoundBufferGetSampleRate) sfSoundBuffer_GetSampleRate;
unsigned int sfSoundBuffer_GetSampleRate(sfSoundBuffer* SoundBuffer);

%rename(SoundBufferGetChannelsCount) sfSoundBuffer_GetChannelsCount;
unsigned int sfSoundBuffer_GetChannelsCount(sfSoundBuffer* SoundBuffer);

%rename(SoundBufferGetDuration) sfSoundBuffer_GetDuration;
float sfSoundBuffer_GetDuration(sfSoundBuffer* SoundBuffer);

%rename(SoundBufferRecorderCreate) sfSoundBufferRecorder_Create;
sfSoundBufferRecorder* sfSoundBufferRecorder_Create();

%rename(SoundBufferRecorderDestroy) sfSoundBufferRecorder_Destroy;
void sfSoundBufferRecorder_Destroy(sfSoundBufferRecorder* SoundBufferRecorder);

%rename(SoundBufferRecorderStart) sfSoundBufferRecorder_Start;
void sfSoundBufferRecorder_Start(sfSoundBufferRecorder* SoundBufferRecorder, unsigned int SampleRate);

%rename(SoundBufferRecorderStop) sfSoundBufferRecorder_Stop;
void sfSoundBufferRecorder_Stop(sfSoundBufferRecorder* SoundBufferRecorder);

%rename(SoundBufferRecorderGetSampleRate) sfSoundBufferRecorder_GetSampleRate;
unsigned int sfSoundBufferRecorder_GetSampleRate(sfSoundBufferRecorder* SoundBufferRecorder);

%rename(SoundBufferRecorderGetBuffer) sfSoundBufferRecorder_GetBuffer;
sfSoundBuffer* sfSoundBufferRecorder_GetBuffer(sfSoundBufferRecorder* SoundBufferRecorder);

%rename(SoundCreate) sfSound_Create;
sfSound* sfSound_Create();

%rename(SoundDestroy) sfSound_Destroy;
void sfSound_Destroy(sfSound* Sound);

%rename(SoundPlay) sfSound_Play;
void sfSound_Play(sfSound* Sound);

%rename(SoundPause) sfSound_Pause;
void sfSound_Pause(sfSound* Sound);

%rename(SoundStop) sfSound_Stop;
void sfSound_Stop(sfSound* Sound);

%rename(SoundSetBuffer) sfSound_SetBuffer;
void sfSound_SetBuffer(sfSound* Sound, sfSoundBuffer* Buffer);

%rename(SoundGetBuffer) sfSound_GetBuffer;
sfSoundBuffer* sfSound_GetBuffer(sfSound* Sound);

%rename(SoundSetLoop) sfSound_SetLoop;
void sfSound_SetLoop(sfSound* Sound, sfBool Loop);

%rename(SoundGetLoop) sfSound_GetLoop;
sfBool sfSound_GetLoop(sfSound* Sound);

%rename(SoundGetStatus) sfSound_GetStatus;
sfSoundStatus sfSound_GetStatus(sfSound* Sound);

%rename(SoundSetPitch) sfSound_SetPitch;
void sfSound_SetPitch(sfSound* Sound, float Pitch);

%rename(SoundSetVolume) sfSound_SetVolume;
void sfSound_SetVolume(sfSound* Sound, float Volume);

%rename(SoundSetPosition) sfSound_SetPosition;
void sfSound_SetPosition(sfSound* Sound, float X, float Y, float Z);

%rename(SoundSetRelativeToListener) sfSound_SetRelativeToListener;
void sfSound_SetRelativeToListener(sfSound* Sound, sfBool Relative);

%rename(SoundSetMinDistance) sfSound_SetMinDistance;
void sfSound_SetMinDistance(sfSound* Sound, float MinDistance);

%rename(SoundSetAttenuation) sfSound_SetAttenuation;
void sfSound_SetAttenuation(sfSound* Sound, float Attenuation);

%rename(SoundSetPlayingOffset) sfSound_SetPlayingOffset;
void sfSound_SetPlayingOffset(sfSound* Sound, float TimeOffset);

%rename(SoundGetPitch) sfSound_GetPitch;
float sfSound_GetPitch(sfSound* Sound);

%rename(SoundGetVolume) sfSound_GetVolume;
float sfSound_GetVolume(sfSound* Sound);

%rename(SoundGetPosition) sfSound_GetPosition;
void sfSound_GetPosition(sfSound* Sound, float* X, float* Y, float* Z);

%rename(SoundIsRelativeToListener) sfSound_IsRelativeToListener;
sfBool sfSound_IsRelativeToListener(sfSound* Sound);

%rename(SoundGetMinDistance) sfSound_GetMinDistance;
float sfSound_GetMinDistance(sfSound* Sound);

%rename(SoundGetAttenuation) sfSound_GetAttenuation;
float sfSound_GetAttenuation(sfSound* Sound);

%rename(SoundGetPlayingOffset) sfSound_GetPlayingOffset;
float sfSound_GetPlayingOffset(sfSound* Sound);

%rename(SoundRecorderCreate) sfSoundRecorder_Create;
sfSoundRecorder* sfSoundRecorder_Create(sfSoundRecorderStartCallback   OnStart,

%rename(SoundRecorderDestroy) sfSoundRecorder_Destroy;
void sfSoundRecorder_Destroy(sfSoundRecorder* SoundRecorder);

%rename(SoundRecorderStart) sfSoundRecorder_Start;
void sfSoundRecorder_Start(sfSoundRecorder* SoundRecorder, unsigned int SampleRate);

%rename(SoundRecorderStop) sfSoundRecorder_Stop;
void sfSoundRecorder_Stop(sfSoundRecorder* SoundRecorder);

%rename(SoundRecorderGetSampleRate) sfSoundRecorder_GetSampleRate;
unsigned int sfSoundRecorder_GetSampleRate(sfSoundRecorder* SoundRecorder);

%rename(SoundRecorderCanCapture) sfSoundRecorder_CanCapture;
sfBool sfSoundRecorder_CanCapture();

%rename(SoundStreamCreate) sfSoundStream_Create;
sfSoundStream* sfSoundStream_Create(sfSoundStreamStartCallback   OnStart,

%rename(SoundStreamDestroy) sfSoundStream_Destroy;
void sfSoundStream_Destroy(sfSoundStream* SoundStreamStream);

%rename(SoundStreamPlay) sfSoundStream_Play;
void sfSoundStream_Play(sfSoundStream* SoundStream);

%rename(SoundStreamPause) sfSoundStream_Pause;
void sfSoundStream_Pause(sfSoundStream* SoundStream);

%rename(SoundStreamStop) sfSoundStream_Stop;
void sfSoundStream_Stop(sfSoundStream* SoundStream);

%rename(SoundStreamGetStatus) sfSoundStream_GetStatus;
sfSoundStatus sfSoundStream_GetStatus(sfSoundStream* SoundStream);

%rename(SoundStreamGetChannelsCount) sfSoundStream_GetChannelsCount;
unsigned int sfSoundStream_GetChannelsCount(sfSoundStream* SoundStream);

%rename(SoundStreamGetSampleRate) sfSoundStream_GetSampleRate;
unsigned int sfSoundStream_GetSampleRate(sfSoundStream* SoundStream);

%rename(SoundStreamSetPitch) sfSoundStream_SetPitch;
void sfSoundStream_SetPitch(sfSoundStream* SoundStream, float Pitch);

%rename(SoundStreamSetVolume) sfSoundStream_SetVolume;
void sfSoundStream_SetVolume(sfSoundStream* SoundStream, float Volume);

%rename(SoundStreamSetPosition) sfSoundStream_SetPosition;
void sfSoundStream_SetPosition(sfSoundStream* SoundStream, float X, float Y, float Z);

%rename(SoundStreamSetRelativeToListener) sfSoundStream_SetRelativeToListener;
void sfSoundStream_SetRelativeToListener(sfSoundStream* SoundStream, sfBool Relative);

%rename(SoundStreamSetMinDistance) sfSoundStream_SetMinDistance;
void sfSoundStream_SetMinDistance(sfSoundStream* SoundStream, float MinDistance);

%rename(SoundStreamSetAttenuation) sfSoundStream_SetAttenuation;
void sfSoundStream_SetAttenuation(sfSoundStream* SoundStream, float Attenuation);

%rename(SoundStreamSetLoop) sfSoundStream_SetLoop;
void sfSoundStream_SetLoop(sfSoundStream* SoundStream, sfBool Loop);

%rename(SoundStreamGetPitch) sfSoundStream_GetPitch;
float sfSoundStream_GetPitch(sfSoundStream* SoundStream);

%rename(SoundStreamGetVolume) sfSoundStream_GetVolume;
float sfSoundStream_GetVolume(sfSoundStream* SoundStream);

%rename(SoundStreamGetPosition) sfSoundStream_GetPosition;
void sfSoundStream_GetPosition(sfSoundStream* SoundStream, float* X, float* Y, float* Z);

%rename(SoundStreamIsRelativeToListener) sfSoundStream_IsRelativeToListener;
sfBool sfSoundStream_IsRelativeToListener(sfSoundStream* SoundStream);

%rename(SoundStreamGetMinDistance) sfSoundStream_GetMinDistance;
float sfSoundStream_GetMinDistance(sfSoundStream* SoundStream);

%rename(SoundStreamGetAttenuation) sfSoundStream_GetAttenuation;
float sfSoundStream_GetAttenuation(sfSoundStream* SoundStream);

%rename(SoundStreamGetLoop) sfSoundStream_GetLoop;
sfBool sfSoundStream_GetLoop(sfSoundStream* SoundStream);

%rename(SoundStreamGetPlayingOffset) sfSoundStream_GetPlayingOffset;
float sfSoundStream_GetPlayingOffset(sfSoundStream* SoundStream);

