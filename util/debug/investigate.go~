package main

import . "sfml/graphics"
import "testing"
import "fmt"
//import . "sfml/debug"


func Debug(x interface{}){
	fmt.Printf("%#v\n", x);
}


func TestConstructors(t *testing.T) {		
	c1 := new(Color)
	Debug(c1)
	c3 := ColorFromRGB( 1, 2, 3 );
	/* This leaks.
	 for {
		c3 = ColorFromRGB( 1, 2, 3 );
	}
	 */
	Debug(c3)

	f1 := GetDefaultFont()
	Debug(f1)
	for{
		f1 = FontCreateFromFile("../test/arial.ttf", 34)
		SfFont_Destroy(*f1.Val)
	}

}

/*
func BenchmarkPoly(b *testing.B) {
	pg := new(Polygon)
	for i := 0; i < b.N; i++ {
		pg.RandomEl();
	}
}

func BenchmarkCollidePoly(b *testing.B) {
	pg1 := new(Polygon)
	pg2 := new(Polygon)
	for i := 0; i < b.N; i++ {
		pg1 = pg1.RandomEl()
		pg2 = pg2.RandomEl()
		//Debug(pg1)
		//Debug(pg2)
		pg1.Collide(pg2)
		//Debug("-------------------------------------------")
	}
}
*/