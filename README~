Derek A. Rhodes / physci@gmail.com
$ git clone git@github.com:drhodes/go-sfml.git

BUILD CURRENTLY BROKEN

Go bindings for:
Simple and Fast Multimedia Library
http://www.sfml-dev.org/

I am in no way affiliated with SFML.

These bindings are experimental, the API is subject to change and has
only been tested on linux. (Ubuntu 10.4 lucid x86)  

-------------------------------------------------------------------------------
REQUIREMENTS:

You will need to build SWIG from scratch if you want to install
this, but don't worry, it's a piece of cake. First grab the dependencies,
then checkout SWIG (below)


-------------------------------------------------------------------------------
DEPENDENCIES:

python
swig > 2.0
libcsfml 1.5


If you're using Ubuntu:

$ sudo apt-get build-dep swig 
# beware - it looks like apt-get grabs everything necessary 
# for *all* supported swig languages.

$ sudo apt-get install libcsfml-dev      # The SFML headers

~~
libcsfml-dev            - Development files for the C binding of SFML
libcsfml-audio1.5 
libcsfml-graphics1.5
libcsfml-network1.5 
libcsfml-system1.5  
libcsfml-window1.5  
libcsfml1.5-dbg
~~

GET and BUILD (But don't install) SWIG SVN.
http://www.swig.org/svn.html

!! There's *NO* need to install SWIG system wide to build go-sfml

Once swig is built, It wouldn't hurt to:
$ make check-go-examples 


-------------------------------------------------------------------------------
MANUAL CONFIGURATION:

At this point the SVN version of SWIG is built

To prepare for the next step, you need to a find file called "preinst-swig"
It should be in the root of the SVN checkout.

You might as well copy the absolute path to that file into the clipboard.

And now, back in the go-sfml directory edit the file "build",
and fix this line:

SWIGBIN=/absolute/path/to/swig/presint-swig


-------------------------------------------------------------------------------
INSTALLING:

go-sfml$ make install

I hope it works for you, and if it doesn't - please complain over at 
http://github.com/drhodes/go-sfml/issues


-------------------------------------------------------------------------------
Now try out the example in the test directory,

test $ make
test $ ./win-example

You should see a rotating, scaling gopher.

